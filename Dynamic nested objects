// Write code to parse urls into a sitemap tree structure and display it as text. For example, the following urls will result in this printed structure.
//
// Milestones:
// 1. Parse routes into data structure
// 2. Print data structure as simply as possible to check parsing
// 3. Format text output like shown in below
//
// Input:
const routes = [

    '/home/anti-depressants/xanax',
    '/home/heart/b/c',
	  '/d/e/f/g/h'


]

function treeRoute(routes){
  let j;
	let map={};
	let array=[];
	
  for(let i=0;i<routes.length;i++){
		console.log("map stage -->i",map,i)
	  let reference = map;
    let splitRoute = routes[i].split('/').slice(1) ;
    console.log(splitRoute);
		console.log(splitRoute.length)
    for(j=0;j<splitRoute.length;j++){
			//if  reference[splitRoute[j]] value is different from other values on same level then give it a {} otherwise enter the same value object . Again check for values in same level , if same enter that value object , check then loop.
			
			let keys = Object.keys(reference);
			let current_key = splitRoute[j];
			console.log("keys++++++->", keys);
			console.log("[splitRoute[j]]=======",splitRoute[j]);
			
			
			if(keys.indexOf(splitRoute[j]) === -1){
				console.log("Not Same key")
				reference = reference[splitRoute[j]] = {};
			}
			else{
				console.log("Same key")
				let object2 = {[splitRoute[j]]:{}}
				console.log("object2",object2)
				reference = Object.assign(object2, home.current_key);
				console.log("reference------->", reference);
				// home.current_key = splitRoute[j] = {} ;
			}
    }
  }
  return map;
}